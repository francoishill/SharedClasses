<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:Custom="http://schemas.denisvuyka.wordpress.com/wpfpropertygrid"
				x:Class="SharedClasses.PropertiesEditor"
				xmlns:local='clr-namespace:SharedClasses'
				xmlns:System="clr-namespace:System;assembly=mscorlib"
				Title="PropertiesEditor"
				Height="300"
				Width="1000"
				WindowStartupLocation='CenterScreen'>
	<Window.Resources>
		<!--<local:TmpClass x:Key='tmpclass' />
		<local:FontList x:Key="FontFamilyList" />
		<local:FontSizeList x:Key="FontSizeList" />
		<local:FontStyleConverter x:Key="FontStyleConverter" />
		<local:FontWeightConverter x:Key="FontWeightConverter" />-->
		<!--<local:XmlLanguageList x:Key="XmlLanguageList" />-->
		<local:PipesToNewlinesConverter x:Key='pipesToNewlinesConverter' />
		<DataTemplate x:Key="String_InlineTemplate">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBox Grid.Column="0"
								 Text="{Binding StringValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								 IsReadOnly="{Binding IsReadOnly}" />
				<Button Grid.Column="1"
								Margin="2,0,0,0"
								Content="[...]"
								Width="20"
								Command="Custom:PropertyEditorCommands.ShowExtendedEditor"
								CommandParameter="{Binding}" />
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="String_ExtendedTemplate">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<TextBox Grid.Row="0"
								 Text="{Binding StringValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource pipesToNewlinesConverter}}"
								 IsReadOnly="{Binding IsReadOnly}"
								 TextWrapping="Wrap"
								 AcceptsReturn='True'
								 IsUndoEnabled='True'
								 UndoLimit='100'/>
			</Grid>
		</DataTemplate>
		<!--<DataTemplate x:Key="StringList_InlineTemplateKey">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0"
									 Text="Click the button to edit"
									 TextWrapping="Wrap" />
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="StringList_ExtendedTemplateKey">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0"
									 Text="Click the button to edit"
									 TextWrapping="Wrap" />
			</Grid>
		</DataTemplate>-->
		<!--<DataTemplate x:Key="TextCategoryEditor">
			<StackPanel Margin="5">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<ComboBox Grid.Column="0"
										Margin="2"
										ItemsSource="{Binding Source={StaticResource FontFamilyList}}"
										DisplayMemberPath="FamilyNames.Values[0]"
										SelectedItem="{Binding [FontFamily].PropertyValue.Value}" />
					<ComboBox Grid.Column="1"
										Margin="2"
										ItemsSource="{Binding Source={StaticResource FontSizeList}}"
										SelectedItem="{Binding [FontSize].PropertyValue.Value}" />
				</Grid>
				<StackPanel Orientation="Horizontal">
					<CheckBox Margin="2"
										Content="Bold"
										IsChecked="{Binding Path=[FontWeight].PropertyValue.Value, Converter={StaticResource FontWeightConverter}}" />
					<CheckBox Margin="2"
										Content="Italic"
										IsChecked="{Binding Path=[FontStyle].PropertyValue.Value, Converter={StaticResource FontStyleConverter}}" />
				</StackPanel>
			</StackPanel>
		</DataTemplate>-->
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width='auto' />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<ListBox Name='listBox1'
						 MinWidth='200'
						 HorizontalAlignment='Stretch'
						 SelectionChanged="listBox1_SelectionChanged"
						 SelectionMode='Single'
						 HorizontalContentAlignment='Stretch'>
			<ListBox.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
												 Color="Transparent" />
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
												 Color="Transparent" />
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
												 Color="Black" />
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="ContentTemplate">
						<Setter.Value>
							<DataTemplate>
								<Border x:Name='listboxitemBorder'
												CornerRadius='5'
												Margin='5,5,5,0'
												HorizontalAlignment='Stretch'
												Padding='5,3'>
									<Border.Background>
										<LinearGradientBrush StartPoint='0,0'
																				 EndPoint='0,1'>
											<GradientStop Color='#fff'
																		Offset='0' />
											<GradientStop Color='#ddd'
																		Offset='0.7' />
											<GradientStop Color='#ccc'
																		Offset='1' />
										</LinearGradientBrush>
									</Border.Background>
									<TextBlock x:Name='listboxitemTextBlock'
														 FontSize='20'
														 Foreground='#333'
														 Text='{Binding}' />
								</Border>
								<DataTemplate.Triggers>
									<DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}"
															 Value="True">
										<Setter Property="Background"
														TargetName="listboxitemBorder">
											<Setter.Value>
												<LinearGradientBrush StartPoint='0,0'
																						 EndPoint='0,1'>
													<GradientStop Color='#555'
																				Offset='0' />
													<GradientStop Color='#222'
																				Offset='0.7' />
													<GradientStop Color='#000'
																				Offset='1' />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
										<Setter Property="Foreground"
														TargetName="listboxitemTextBlock"
														Value='#fff' />
									</DataTrigger>
									<DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource TemplatedParent}}"
															 Value="True">
										<Setter Property="Background"
														TargetName="listboxitemBorder">
											<Setter.Value>
												<LinearGradientBrush StartPoint='0,0'
																						 EndPoint='0,1'>
													<GradientStop Color='#79b'
																				Offset='0' />
													<GradientStop Color='#468'
																				Offset='0.7' />
													<GradientStop Color='#357'
																				Offset='1' />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
										<Setter Property="Foreground"
														TargetName="listboxitemTextBlock"
														Value='#fff' />
									</DataTrigger>
								</DataTemplate.Triggers>
							</DataTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.Resources>
			<!--<ListBox.Items>
				<ListBoxItem>1. lkjsdf</ListBoxItem>
				<ListBoxItem>2. lkjsdf</ListBoxItem>
				<ListBoxItem IsSelected='True'>3. lkjsdf</ListBoxItem>
				<ListBoxItem>4. lkjsdf</ListBoxItem>
			</ListBox.Items>-->
		</ListBox>
		<GridSplitter Width='5'
									BorderThickness='2'
									BorderBrush='Transparent'
									Background='#777' />
		<Custom:PropertyGrid x:Name='propertyGrid1'
												 Grid.Column='1'
												 PropertyDisplayMode="All"
												 HorizontalAlignment="Stretch"
												 ShowAttachedProperties="False"
												 ShowReadOnlyProperties="True"
												 VerticalAlignment="Stretch">
			<Custom:PropertyGrid.Layout>
				<Custom:TabbedLayout>
					<Custom:AlphabeticalLayout Custom:TabbedLayout.CanClose="False"
																		 Custom:TabbedLayout.Header="Alphabetical" />
				</Custom:TabbedLayout>
			</Custom:PropertyGrid.Layout>
			<Custom:PropertyGrid.Editors>
				<!--See code for the added Editors-->
			</Custom:PropertyGrid.Editors>
		</Custom:PropertyGrid>
	</Grid>
</Window>
